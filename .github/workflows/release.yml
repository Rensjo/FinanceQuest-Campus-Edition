name: Build All Platforms & Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-all:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'universal-apple-darwin'
            name: 'macOS'
          - platform: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            name: 'Linux'
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            name: 'Windows'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'FinanceQuest Campus Edition ${{ github.ref_name }}'
          releaseBody: |
            ## FinanceQuest Campus Edition ${{ github.ref_name }}
            
            ### üì¶ Installation Instructions
            
            **macOS:**
            - Download `FinanceQuest_*.dmg`
            - Open the DMG file
            - Drag FinanceQuest to Applications folder
            - For Apple Silicon Macs, use the `aarch64` version
            - For Intel Macs, use the `x64` version
            - For Universal (both), use the `universal` version
            
            **Windows:**
            - Download `FinanceQuest_*_x64_en-US.msi`
            - Run the installer
            - Or download the portable `.exe` version
            
            **Linux:**
            - **AppImage**: Download `*.AppImage`, make executable, and run
            - **DEB**: Download `*.deb` and install with `sudo dpkg -i *.deb`
            - **Portable**: Download `.tar.gz`, extract, and run the executable
            
            ### ‚ú® What's New
            See [CHANGELOG.md](https://github.com/Rensjo/FinanceQuest_Campus-Edition/blob/main/CHANGELOG.md) for details.
            
            ### üêõ Report Issues
            Found a bug? [Open an issue](https://github.com/Rensjo/FinanceQuest_Campus-Edition/issues/new)
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform == 'macos-latest' && '--target universal-apple-darwin' || '' }}

      - name: Upload artifacts (${{ matrix.name }})
        uses: actions/upload-artifact@v4
        with:
          name: FinanceQuest-${{ matrix.name }}-Artifacts
          path: |
            src-tauri/target/release/bundle/**/*
            src-tauri/target/*/release/bundle/**/*
          if-no-files-found: warn
